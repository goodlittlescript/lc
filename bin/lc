#!/usr/bin/env ruby
$:.unshift File.expand_path('../../lib', __FILE__)

begin
  require 'linecook'
  require 'optparse'

  options = Linecook.options(
    :mode => :render
  )
  OptionParser.new do |opts|
    opts.banner = %{
usage: lc [options] TEMPLATE ARGS...

  Render ERB templates with arguments.

options:

}.lstrip

    opts.on("-l", "--list", "list templates") do
      options[:mode] = :list
    end

    opts.on("-h", "--help", "print this help") do
      puts opts
      puts
      exit
    end

  end.parse!

  mode = options[:mode]
  config = Linecook.setup(options)
  template_file, *args = ARGV; ARGV.clear

  case mode
  when :list
    config.templates.each_pair do |name, file|
      puts name
    end

  else
    template = \
    if File.exists?(template_file)
      Linecook::Template.new(template_file)
    else
      config.templates[template_file]
    end

    if template.nil?
      $stderr.puts "could not find template: #{template_file.inspect}"
      exit 1
    end

    print template.result(args)
  end

rescue Interrupt
  exit 130
rescue Errno::EPIPE
  exit 0
end
